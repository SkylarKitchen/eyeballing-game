{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/Level.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export class Level {\n  targetValue: number;\n  userSelection: number;\n  targetEl: HTMLElement;\n  targetElProperty: string;\n  userSelectEl: HTMLInputElement;\n  levelNumber: number;\n  messageEl: HTMLDivElement;\n\n  constructor(\n    levelNumber: number,\n    targetValue: number,\n    userSelection: number,\n    targetElProperty: string,\n    targetEl: HTMLElement,\n    userSelectEl: HTMLInputElement,\n    messageEl: HTMLDivElement\n  ) {\n    this.levelNumber = levelNumber;\n    this.targetValue = targetValue;\n    this.userSelection = userSelection;\n    this.targetElProperty = targetElProperty;\n    this.targetEl = targetEl;\n    this.userSelectEl = userSelectEl;\n    this.messageEl = messageEl;\n  }\n\n  play(): void {\n    console.log(`level ${this.levelNumber} started`);\n    this.userSelectEl.addEventListener('input', (e) => {\n      this.userSelection = parseInt((e.target as HTMLInputElement).value);\n      this.updateGameUI();\n      console.log(`user selected: ${this.userSelection}`);\n    });\n  }\n\n  updateGameUI(): void {\n    if (this.levelNumber === 1) {\n      // columnGap\n      this.targetEl.style.setProperty(this.targetElProperty, `${this.userSelection}px`);\n    } else if (this.levelNumber === 2) {\n      // variableFontWeight\n      this.targetEl.style.setProperty(this.targetElProperty, `\"wght\" ${this.userSelection}`);\n    }\n    console.log(`update target ${this.targetElProperty} to ${this.userSelection}`);\n  }\n\n  checkAnswer(): boolean {\n    //console.log(`user selected: ${this.userSelection} and target is: ${this.targetValue}`);\n    this.messageEl.textContent = `user selected: ${this.userSelection} and target is: ${this.targetValue}`;\n    return this.targetValue === this.userSelection;\n  }\n}\n", "import { Level } from './utils/Level';\n\nenum SELECTORS {\n  TARGET_ELEMENTS = '[data-game=\"target-el\"]',\n  USER_SELECT_ELEMENTS = '[data-game=\"user-select-el\"]',\n  SUBMIT_BUTTONS = '[data-game=\"submit-button\"]',\n  MESSAGE_ELEMENTS = '[data-game=\"message-el\"]',\n  NEXT_ROUND_BUTTONS = '[data-game=\"next-button\"]',\n  TAB_LINKS = '.w-tab-link',\n}\n\n// GET ELEMENTS\nconst targetEls = document.querySelectorAll<HTMLElement>(SELECTORS.TARGET_ELEMENTS);\nconst userSelectEls = document.querySelectorAll<HTMLInputElement>(SELECTORS.USER_SELECT_ELEMENTS);\nconst submitButtons = document.querySelectorAll<HTMLAnchorElement>(SELECTORS.SUBMIT_BUTTONS);\nconst messageEls = document.querySelectorAll<HTMLDivElement>(SELECTORS.MESSAGE_ELEMENTS);\nconst nextRoundButtons = document.querySelectorAll<HTMLAnchorElement>(SELECTORS.NEXT_ROUND_BUTTONS);\nconst tabLinks = document.querySelectorAll<HTMLAnchorElement>(SELECTORS.TAB_LINKS);\n\n// LOG THEM JUST FOR DEBUGGING\nconsole.log({ targetEls, userSelectEls, submitButtons, messageEls, nextRoundButtons });\n\n// STATE VARIABLES\nlet currentLevel = 1;\n\n// CREATE LEVELS\nconst levels: Level[] = [];\n\nlet levelOne = new Level(\n  1, // level number\n  Math.floor(Math.random() * 100), // target value 0 to 100\n  0, // user selection\n  'column-gap', // target element property\n  targetEls[0],\n  userSelectEls[0],\n  messageEls[0]\n);\n\nlet levelTwo = new Level(\n  2, // level number\n  Math.floor(Math.random() * 800 + 100), // target value 100-900\n  0, // user selection\n  'font-variation-settings', // target element property\n  targetEls[1],\n  userSelectEls[1],\n  messageEls[1]\n);\n\n// add levels to levels array\nlevels.push(levelOne);\nlevels.push(levelTwo);\n\n// start playing first level\nlevels[currentLevel - 1].play();\n\n// EVENT LISTENERS\nsubmitButtons.forEach((button) => {\n  button.addEventListener('click', handleSubmitButtonClicked);\n});\n\nnextRoundButtons.forEach((button) => {\n  button.addEventListener('click', handleNextRoundButtonClicked);\n});\n\n// HANDLERS\nfunction handleSubmitButtonClicked() {\n  levels[currentLevel - 1].checkAnswer();\n  hideSubmitShowNext();\n}\n\nfunction handleNextRoundButtonClicked() {\n  currentLevel++;\n  simulateClick(tabLinks[currentLevel - 1]);\n  levels[currentLevel - 1].play();\n  hideNextShowSubmit();\n}\n\n// HELPERS\nfunction hideSubmitShowNext() {\n  submitButtons.forEach((button) => {\n    button.style.setProperty('visibility', 'hidden');\n  });\n  nextRoundButtons.forEach((button) => {\n    button.style.setProperty('visibility', 'visible');\n  });\n}\n\nfunction hideNextShowSubmit() {\n  submitButtons.forEach((button) => {\n    button.style.setProperty('visibility', 'visible');\n  });\n  nextRoundButtons.forEach((button) => {\n    button.style.setProperty('visibility', 'hidden');\n  });\n}\n\n// need to simulate click to trigger tab change\n// using click() causes scroll issues in Safari\nfunction simulateClick(element: HTMLAnchorElement) {\n  let clickEvent = new MouseEvent('click', {\n    view: window,\n    bubbles: true,\n    cancelable: false,\n  });\n  element.dispatchEvent(clickEvent);\n}\n"],
  "mappings": "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",
  "names": []
}
